Ich benötige Unterstützung bei der Entwicklung eines Installers mit WiX Version 4 für eine ASP.NET Core 8.0 Web API, die als selbstgehosteter Kestrel-Server unter Windows-Dienst betrieben wird.

Der Installer soll folgende Installations-UI-Ansichten enthalten:

1. **Lizenzinformation**
2. **Dienstaccount und Passwort** für den Windows-Dienst
3. **Kestrel Service-Konfiguration**, einschließlich Hostname und Port
4. **Installation des Server-PrivateKey/Zertifikats** in LocalMachine/Root
5. **Installation des Client-Zertifikats** in LocalMachine/TrustedPeople
6. **[Optional] Installation des Client-PrivateKey/Zertifikats** in CurrentUser/My (für die API-Tests mit Swagger im Browser). Es wird das Client-Authentifizierungsverfahren verwendet.
7. **Druck-Warteschlangen-Konfiguration**, einschließlich Aktivierung (Boolean, Default=true) und der Anzahl der parallelen Verarbeitungen (Number, Default=1).

Bitte hilf mir, diese Anforderungen in einem WiX-Installer zu implementieren. E
Beispiele für die Struktur der XML-Dateien oder spezifischen WiX-Elemente wäre sehr hilfreich.

**Erwartungen:**

- **Ton und Stil**: Technisch und präzise
- **Kontext**: Detaillierte Anweisungen und Beispiele für WiX-Elemente, die die genannten Anforderungen erfüllen.
- **Beispiele**: Konkrete XML-Beispiele für die verschiedenen UI-Ansichten und Konfigurationselemente.

### Gewünscht WiX-Elemente:

1. **Lizenzinformation**:
   ```xml
   <UIRef Id="WixUI_License" />
   ```

2. **Dienstaccount und Passwort**:
   ```xml
   <Property Id="SERVICEACCOUNT" Secure="yes" />
   <Property Id="SERVICEPASSWORD" Secure="yes" />
   <!-- UI Elements for entering service account and password -->
   ```

3. **Kestrel Service-Konfiguration**:
   ```xml
   <Property Id="HOSTNAME" Value="localhost" />
   <Property Id="PORT" Value="5000" />
   <!-- UI Elements for entering hostname and port -->
   ```

4. **Installation des Server-PrivateKey/Zertifikats**:
   UI soll einen File-Picker auf *.pfx|*.p12 und Passwort anzeigen

5. **Installation des Client-Zertifikats**:
   UI soll einen File-Picker auf *.cer oder andere gängige Zertifikat-Extensions anzeigen

6. **Druck-Warteschlangen-Konfiguration**:
   ```xml
   <Property Id="ENABLE_PRINT_QUEUE" Value="true" />
   <Property Id="PARALLEL_PROCESSING_COUNT" Value="1" />
   <!-- UI Elements for configuring print queue and parallel processing count -->
   ```

Ich stelle folgende wichtige Dateien zur Verfügung, die den aktuellen Stand widerspiegeln und für das Verständnis hilfreich sein könnten:   
